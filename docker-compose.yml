#this file binds together all the services of the platform
#a simple 'docker-compose up' will start everything!
version: "3"
services:
  # Django APP
  app: &app
    build:
      context: .
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py makemigrations core &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    depends_on:
      - db
      - rabbitmq
      - celery_worker
    environment:
      WAIT_HOSTS: db:3306

  # MySQL Database
  db:
    image: mysql:8.0.19
    ports:
      - "3306:3306"
    environment:
      - MYSQL_DATABASE=app
      - MYSQL_PASSWORD=password
      - MYSQL_ROOT_PASSWORD=password

  # Messaging Broker
  rabbitmq:
    image: rabbitmq:alpine

  #  Distributed Task Queue to achieve asynchronous behaviour
  celery_worker:
    <<: *app
    command: "celery -A app worker --loglevel=info"
    ports: []
    depends_on:
      - rabbitmq
      - db

  frontend:
    image: flameslayer/frontend
    ports:
    - "80:80"




